from matplotlib import pyplot as plt
from natsort import natsorted
import numpy as np
import os, gmsh

# Results from Cerquaglia

plt.plot(*np.transpose(
[[0.0000000000000000, 0.00000000000000000],
[0.12002743484224984, 0.00011063148235453818],
[0.14060356652949266, -0.0009238512762661522],
[0.17146776406035685, 0.02364511424097523],
[0.21262002743484243, 0.04743821768925109],
[0.2743484224965708, 0.06330028665476833],
[0.3737997256515777, 0.057955459068561435],
[0.49382716049382713, 0.05416235562028557],
[0.5212620027434842, 0.04226580389614765],
[0.541838134430727, 0.042696838378906254],
[0.5658436213991769, 0.029507183206492472],
[0.5967078189300411, 0.02864511424097523],
[0.7133058984910836, 0.00623132113752695],
[0.723593964334705, 0.01580028665476833],
[0.7510288065843621, 0.026145114240975226],
[0.799039780521262, 0.037696838378906264],
[0.826474622770919, 0.032869252172009714],
[0.8573388203017832, 0.026231321137526954],
[0.8710562414266118, 0.01898994182718212],
[0.8950617283950617, 0.012352010792699365],
[0.9224965706447188, 0.005886493551320055],
[0.9705075445816186, 0.016145114240975224],
[0.9979423868312757, 0.023472700447871777],
[1.0150891632373114, 0.029248562516837297],
[1.0665294924554183, 0.028127872861664887],
[1.1111111111111112, 0.02373132113752695],
[1.1316872427983538, 0.020714079758216607],
[1.1591220850480108, 0.024507183206492467],
[1.1899862825788752, 0.02373132113752695],
[1.1899862825788752, 0.0264037349306304],
[1.237997256515775, 0.026058907344423506],
[1.2825788751714677, 0.02261063148235454],
[1.3100137174211248, 0.019334769413389023],
[1.3580246913580247, 0.021317528034078676],
[1.4026063100137174, 0.02804166596511316],
[1.4266117969821672, 0.03519683837890626],
[1.4609053497942386, 0.03847270044787178],
[1.4883401920438957, 0.04148994182718213],
[1.5294924554183813, 0.04002442458580281],
[1.5637860082304527, 0.03321407975821661],
[1.6460905349794237, 0.020369252172009713],
[1.7112482853223594, 0.025541665965113158],
[1.7626886145404663, 0.0317485625168373],
[1.8278463648834018, 0.027869252172009713],
[1.882716049382716, 0.024076148723733846],
[1.9958847736625513, 0.026920976309940742],
[2.112482853223594, 0.028214079758216607],
[2.1810699588477367, 0.025714079758216605],
[2.2805212620027437, 0.020714079758216607],
[2.3319615912208507, 0.02597270044787178],
[2.407407407407408, 0.03476580389614764],
[2.448559670781893, 0.03192097630994074],
[2.513717421124829, 0.026662355620285575],
[2.616598079561043, 0.027696838378906265],
[2.6646090534979425, 0.025627872861664885],
[2.750342935528121, 0.019248562516837295],
[2.829218106995885, 0.024420976309940747],
[2.9149519890260636, 0.030541665965113162],
[2.9903978052126203, 0.034420976309940746],
[3.03840877914952, 0.03407614872373385]]))

# Results from Zhu

plt.plot(*np.transpose(
[[0.0000000, 0.00000000000],
[0.12096077478683771, 0.00010362834532193568],
[0.13824088547067168, -0.0007116407531951863],
[0.14472092697710942, 0.004995242936424678],
[0.16632106533190186, 0.01907222270415367],
[0.18576118985121506, 0.03195347446072422],
[0.20952134204148676, 0.04331289056672946],
[0.21816139738340373, 0.05358528120804522],
[0.2354415080672377, 0.05695506014858265],
[0.28944185395421884, 0.0607596492749959],
[0.33048211682832446, 0.058150788159741104],
[0.42552272558941123, 0.05195474301101097],
[0.46440297462803765, 0.048313207704301156],
[0.5076032513376225, 0.041682352369695225],
[0.5356834311988528, 0.0382582221559233],
[0.5486435142117282, 0.03477974066891691],
[0.5702436525665207, 0.027822777694904124],
[0.5983238324277509, 0.017659089600057323],
[0.6177639569470641, 0.01418060811305093],
[0.6739243166695245, 0.006680132406693396],
[0.6955244550243169, 0.008310670603727643],
[0.7106445518726716, 0.011245639358389289],
[0.7624848839241735, 0.019778789256201846],
[0.8251252851530716, 0.01776779214652627],
[0.8618455203562188, 0.013963203020113033],
[0.9741662398011395, 0.01418060811305093],
[1.023846558017162, 0.012713123735720106],
[1.1361672774620828, 0.008962885882541342],
[1.1880076095135848, 0.013691446653940658],
[1.2420079554005659, 0.017604738326822845],
[1.3262484949842563, 0.024018188568490886],
[1.4148090622389053, 0.030105531170752067],
[1.4882495326451997, 0.02755102132873175],
[1.533609823190264, 0.024181242388194305],
[1.624330404280392, 0.02211589400528426],
[1.6977708746866864, 0.021681083819408465],
[1.7884914557768148, 0.022713758010863488],
[1.8705719815250261, 0.021735435092642936],
[1.9591325487796751, 0.018637412518277868],
[2.0692932543891165, 0.014561067025692254],
[2.11681355876966, 0.015756795036850704],
[2.1729739184921204, 0.018909168884450243],
[2.283134624101562, 0.01896352015768472],
[2.425695537243192, 0.021572381272939516],
[2.542336284359071, 0.018854817611215772],
[2.6892172251716597, 0.018365656152105492],
[2.80369795845206, 0.018800466337981294],
[2.952738913100128, 0.020920165994125817],
[3.084499757064362, 0.018202602332402073]]))

# List the output files in workspace

gmsh.initialize()
gmsh.option.setNumber('General.Terminal', 0)
directory = natsorted(os.listdir('metafor'))

# Extract the results from Gmsh

time = list()
result = list()

for file in directory:

    gmsh.open(f'metafor/{file}')

    time.append(float(file.replace('.msh', '').replace('output_', '')))
    distance = gmsh.model.mesh.getNode(4)[0][0]-0.292
    result.append(distance)

# Plot the results on the graph

plt.grid(color='lightgray')
plt.plot(time, result, '--k')
plt.savefig('plot.pdf', format='pdf')
